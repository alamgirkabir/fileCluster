version: '3.7'
networks:
  localnetwork:
    driver: bridge
    ipam:
      driver: default
# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: minio/minio:latest
  # command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  command: server --address 0.0.0.0:9000 --console-address ":9001" http://minio{1...4}/data{1...2} http://minio{5...8}/data{1...2}
  restart: unless-stopped
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: alamgir
    MINIO_ROOT_PASSWORD: kabir123
    MINIO_DISTRIBUTED_MODE_ENABLED: 1
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3
  networks:
     - localnetwork

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    volumes:
      - ./data1-1:/data1
      - ./data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - ./data2-1:/data1
      - ./data2-2:/data2

  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - ./data3-1:/data1
      - ./data3-2:/data2

  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - ./data4-1:/data1
      - ./data4-2:/data2

  minio5:
    <<: *minio-common
    hostname: minio5
    volumes:
      - ./data5-1:/data1
      - ./data5-2:/data2
      
  minio6:
    <<: *minio-common
    hostname: minio6
    volumes:
      - ./data6-1:/data1
      - ./data6-2:/data2
  minio7:
    <<: *minio-common
    hostname: minio7
    volumes:
      - ./data7-1:/data1
      - ./data7-2:/data2
  minio8:
    <<: *minio-common
    hostname: minio8
    volumes:
      - ./data8-1:/data1
      - ./data8-2:/data2                  
  nginx:
    image: nginx:1.19.2-alpine
    hostname: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - localnetwork      
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2
      - minio3
      - minio4
      - minio5
      - minio6            
      - minio7
      - minio8            

  varnish:
    build: ./varnish
    container_name: varnish
    ports:
      - "8000:80"
    depends_on:
      - nginx
    restart: unless-stopped
    networks:
      - localnetwork
    volumes:
      - ./varnish/default.vcl:/etc/varnish/default.vcl
    environment:
      VARNISH_BACKEND_GRACE: 10m
      VARNISH_BACKEND_HOST: nginx
      VARNISH_CACHE_STATIC_FILES: 1 #attivo ma non gestibile dal vcl iniettato
      VARNISH_DEFAULT_TTL: 300s
      VARNISH_ERRORS_GRACE: 60s

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
  data5-1:
  data5-2:
  data6-1:
  data6-2:
  data7-1:
  data7-2:
  data8-1:
  data8-2:

